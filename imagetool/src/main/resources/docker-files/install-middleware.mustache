# Copyright (c) 2021, 2024, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
#
# Installing Middleware

FROM os_update AS wls_build
{{#buildArgs}}ARG {{{.}}}
{{/buildArgs}}
ARG TARGETPLATFORM

LABEL com.oracle.weblogic.imagetool.buildid="{{buildId}}"

ENV JAVA_HOME={{{java_home}}} \
ORACLE_HOME={{{oracle_home}}} \
OPATCH_NO_FUSER=true

RUN mkdir -p {{{oracle_home}}} \
{{#isCustomInventoryLoc}}
    && mkdir -p {{inv_loc}} \
    && chown {{userid}}:{{groupid}} {{inv_loc}} \
{{/isCustomInventoryLoc}}
&& mkdir -p {{orainv_dir}} \
&& chown {{userid}}:{{groupid}} {{orainv_dir}} \
&& chown {{userid}}:{{groupid}} {{{oracle_home}}}

{{#installJava}}COPY --from=jdk_build --chown={{userid}}:{{groupid}} {{{java_home}}} {{{java_home}}}/
{{/installJava}}
# copy all installers and response files to the stage directory
{{#installPackages}}COPY --chown={{userid}}:{{groupid}} fmw {{{tempDir}}}/{{{type}}}
{{/installPackages}}
COPY --chown={{userid}}:{{groupid}} oraInst.loc {{inv_loc}}/

USER {{userid}}

{{#beforeFmwInstall}}
    {{{.}}}
{{/beforeFmwInstall}}

# If installer is packaged in a ZIP, extract it before running it
# IF the installer is a JAR file (not a .bin), run the silent install using Java
# If the installer is a BIN, make sure it is executable and run the installer

RUN echo "INSTALLING MIDDLEWARE" \
{{#targetARMPlatform}}
    && if [ "$TARGETPLATFORM" == "linux/arm64" ] ; then \
      {{#installPackagesForARM}}
       echo "INSTALLING {{type}}" \
      {{#isZip}}&& unzip -q {{{tempDir}}}/{{{type}}}/$TARGETPLATFORM/{{installerFilename}} -d {{{tempDir}}}/{{{type}}} {{/isZip}} \
      {{#preinstallCommands}}&& {{{tempDir}}}/{{{type}}}/{{{.}}} {{/preinstallCommands}} \
              {{^isBin}} && if [ ! -f {{{tempDir}}}/{{{type}}}/{{jarName}} ] ; then (cp {{{tempDir}}}/{{{type}}}/$TARGETPLATFORM/{{installerFilename}} {{{tempDir}}}/{{{type}}})  fi \
              && {{{java_home}}}/bin/java -Xmx1024m -jar {{{tempDir}}}/{{{type}}}/{{jarName}} \
        -silent ORACLE_HOME={{{oracle_home}}} \
        -responseFile {{{tempDir}}}/{{{type}}}/$TARGETPLATFORM/{{responseFile.name}} \
        -invPtrLoc {{inv_loc}}/oraInst.loc \
                -ignoreSysPrereqs -force -novalidation {{/isBin}}  \
              {{#isBin}}  && if [ ! -f {{{tempDir}}}/{{{type}}}/{{jarName}} ] ; then (cp {{{tempDir}}}/{{{type}}}/$TARGETPLATFORM/{{installerFilename}} {{{tempDir}}}/{{{type}}})  fi \
              && chmod +x {{{tempDir}}}/{{{type}}}/{{jarName}} \
      && {{{tempDir}}}/{{{type}}}/{{jarName}} \
        -force -ignoreSysPrereqs -silent \
        -responseFile {{{tempDir}}}/{{{type}}}/$TARGETPLATFORM/{{responseFile.name}} \
                -invPtrLoc {{inv_loc}}/oraInst.loc ORACLE_HOME={{{oracle_home}}} -jreLoc {{{java_home}}} {{/isBin}}  \
            {{/installPackagesForARM}}
      && test $? -eq 0 \
      && chmod -R g+r {{{oracle_home}}} \
      || (grep -vh "NOTIFICATION" /tmp/OraInstall*/install*.log && exit 1) \
     fi   {{#targetAMDPlatform}}\{{/targetAMDPlatform}}
{{/targetARMPlatform}}
{{#targetAMDPlatform}}
    && if [ "$TARGETPLATFORM" == "linux/amd64" ] ; then \
    {{#installPackagesForAMD}}
        echo "INSTALLING {{type}}" \
        {{#isZip}}&& unzip -q {{{tempDir}}}/{{{type}}}/$TARGETPLATFORM//{{installerFilename}} -d {{{tempDir}}}/{{{type}}} {{/isZip}} \
        {{#preinstallCommands}}&& {{{tempDir}}}/{{{type}}}/{{{.}}} {{/preinstallCommands}} \
        {{^isBin}} if [ ! -f {{{tempDir}}}/{{{type}}}/{{jarName}} ] ; then (cp {{{tempDir}}}/{{{type}}}/$TARGETPLATFORM/{{installerFilename}} {{{tempDir}}}/{{{type}}})  fi \
        && {{{java_home}}}/bin/java -Xmx1024m -jar {{{tempDir}}}/{{{type}}}/{{jarName}} \
        -silent ORACLE_HOME={{{oracle_home}}} \
        -responseFile {{{tempDir}}}/{{{type}}}/$TARGETPLATFORM/{{responseFile.name}} \
        -invPtrLoc {{inv_loc}}/oraInst.loc \
        -ignoreSysPrereqs -force -novalidation {{/isBin}}  \
        {{#isBin}} && if [ ! -f {{{tempDir}}}/{{{type}}}/{{jarName}} ] ; then (cp {{{tempDir}}}/{{{type}}}/$TARGETPLATFORM/{{installerFilename}} {{{tempDir}}}/{{{type}}})  fi \
        && chmod +x {{{tempDir}}}/{{{type}}}/{{jarName}} \
        && {{{tempDir}}}/{{{type}}}/{{jarName}} \
        -force -ignoreSysPrereqs -silent \
        -responseFile {{{tempDir}}}/{{{type}}}/$TARGETPLATFORM/{{responseFile.name}} \
        -invPtrLoc {{inv_loc}}/oraInst.loc ORACLE_HOME={{{oracle_home}}} -jreLoc {{{java_home}}} {{/isBin}}  \
    {{/installPackagesForAMD}}
    && test $? -eq 0 \
    && chmod -R g+r {{{oracle_home}}} \
    || (grep -vh "NOTIFICATION" /tmp/OraInstall*/install*.log && exit 1) \
     fi
{{/targetAMDPlatform}}

{{#useOwnerPermsForGroup}}
  # OPatch needs write permissions to the logs folder and lock file when running in OpenShift
  RUN mkdir -p ${ORACLE_HOME}/cfgtoollogs \
   && chmod g=u ${ORACLE_HOME}/cfgtoollogs \
   && chmod g=u ${ORACLE_HOME}/inventory/locks/oh.lock
{{/useOwnerPermsForGroup}}

{{> fmw-patching}}

{{#afterFmwInstall}}
    {{{.}}}
{{/afterFmwInstall}}
